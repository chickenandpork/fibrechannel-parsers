package org.smallfoot.parser.zone;

import java.io.*;
import java.util.*;


public class Alias4Parser extends ZoneParser
{
    BufferedReader br;
    java.util.Vector<ZPFCAliasEntry> fcaliases = new java.util.Vector();
    boolean zpquiet;

    public void setDebug(boolean debug)
    {
        zpquiet = !debug;
    }

    public java.util.Enumeration<ZPZoneEntry> zoneElements()
    {
        return null;
    }
    public int zoneSize()
    {
        return 0;
    }

    public java.util.Enumeration<ZPAliasEntry> aliasElements()
    {
        return null;
    }
    public ZPAliasEntry[] aliasArray()
    {
        return null;
    }
    public int aliasSize()
    {
        return 0;
    }



    public void setReader(java.io.Reader is)
    {
        br = new BufferedReader(is);
    }

    public Alias4Parser(java.util.Properties in, boolean debugMe)
    {
        super(in, debugMe);
    }


    public void run()
    {
        String line;

        if (null != br)
            try
            {
                while (null != (line = br.readLine()))
                {
                    String fab = null;
                    String[] lb = line.split(",");
                    if (lb.length <= 2)
                        ;
                    else if (lb.length > 4)
                        ;
                    else if (! lb[0].equalsIgnoreCase("fcid"))
                        ;
                    else if (4 == lb.length) fcaliases.add(new ZPFCAliasEntry(lb[1],lb[2],lb[3]));
                    else fcaliases.add(new ZPFCAliasEntry(lb[1],lb[2]));
                }
            }
            catch (java.io.IOException ioe)
            {
                if (!zpquiet) System.out.println(getClass().getName() + " I/O Error: " + ioe.getMessage());
            }
    }
}
